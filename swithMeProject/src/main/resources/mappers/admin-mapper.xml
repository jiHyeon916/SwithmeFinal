<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">

	<resultMap id="qnaResultSet" type="qna">
		<result column="QNA_NO"			property="qnaNo" />
		<result column="MEMBER_ID"		property="memberId" />
		<result column="QNA_TITLE"		property="qnaTitle" />
		<result column="QNA_CONTENT"	property="qnaContent" />
		<result column="QNA_DATE"		property="qnaDate" />
		<result column="QNA_STATUS"		property="qnaStatus" />
	</resultMap>

	<resultMap id="qrResultSet" type="qnaReply">
		<result column="QNA_REPLY_NO"			property="qnaReplyNo" />
		<result column="QNA_NO"					property="qnaNo" />
		<result column="QNA_REPLY_CONTENT"		property="qnaReplyContent" />
		<result column="QNA_REPLY_CREATE_DATE"	property="qnaReplyCreateDate" />
	</resultMap>
	
   <resultMap id="itemResultSet" type="item">
		<result column="ITEM_NO"		property="itemNo" />
		<result column="ITEM_CATEGORY"	property="itemCategory" />
		<result column="ITEM_NAME"		property="itemName" />
		<result column="ITEM_CONTENT"	property="itemContent" />
		<result column="ITEM_PRICE"		property="itemPrice" />
		<result column="ITEM_STATUS"	property="itemStatus" />
		<result column="ITEM_PHOTO"		property="itemPhoto" />
	</resultMap>

	<resultMap id="sRoomResultSet" type="studyRoom">
		<result column="SR_NO" property="studyRoomNo" />
		<result column="SR_NAME" property="studyRoomName"/>
		<result column="SR_LOCATION" property="studyRoomLocation" />
		<result column="SR_ADDRESS" property="studyRoomAddress" />
		<result column="SR_LAT" property="studyRoomLat" />
		<result column="SR_LNG" property="studyRoomLng" />
		<result column="SR_PHONE" property="studyRoomPhone" />
		<result column="SR_INTRODUCE" property="studyRoomIntroduce" />
		<result column="SR_CREATEDATE" property="studyRoomCreatedate" />
		<result column="SR_WEBSITE" property="studyRoomWebsite" />
	</resultMap>
	
	<!-- 희재 -->
	<!-- 스터디룸 게시글 수 -->
	<select id="adminStudyRoomListCount" resultType="_int">
		SELECT 
			COUNT(*)
		FROM
			BOARD_STUDYROOM
	</select>
	
	<!-- 스터디룸 메인 리스트 -->
	<select id="selectAllStudyRoomList" resultMap="sRoomResultSet">
		SELECT 
			SR_NO 
			,SR_NAME 
			,SR_LOCATION
			,SR_ADDRESS 
			,SR_PHONE
		FROM
			BOARD_STUDYROOM
		ORDER
		BY
			SR_NAME
	</select>
	
	<!-- 스터디룸 삭제 -->
   	<delete id="deleteCheckStudyRoom" parameterType="_int">
   		DELETE
   		FROM
   			BOARD_STUDYROOM
   		WHERE
   			SR_NO=#{studyRoomNo}
   	</delete>
   			
   
   
   
   
   
   
   
 
    <!-- 지현 -->
   
   <resultMap type="member" id="memberResultSet">
      <result column="MEMBER_ID" property="memberId" />
      <result column="MEMBER_PWD" property="memberPwd" />
      <result column="MEMBER_NAME" property="memberName" />
      <result column="MEMBER_EMAIL" property="memberEmail" />
      <result column="NICKNAME" property="nickName" />
      <result column="MEMBER_ENROLL_DATE" property="memberEnrollDate" />
      <result column="MEMBER_STATUS" property="memberStatus" />
   </resultMap>
   
   
   
   
   
      <resultMap type="memberDetailInfo" id="memberDetailInfoReesultSet">
         <result column="BOARD_NO" property="boardNo" />
         <result column="MEMBER_ID" property="memberId" />
         <result column="BOARD_TITLE" property="boardTitle" />
         <result column="BOARD_CONTENT" property="boardContent"/>
         <result column="CREATE_DATE" property="createDate" />
   
         <result column="SB_NO" property="sbNo"/>
         <result column="MEMBER_ID" property="memberId" />
         <result column="SB_TITLE" property="sbTitle" />
         <result column="SB_INTRODICE" property="sbIntroduce" />
         <result column="CREATE_DATE" property="createDate" />
   </resultMap>
  
   
   
   
   <resultMap type="board" id="boardResultSet">
         <result column="BOARD_NO" property="boardNo" />
         <result column="MEMBER_ID" property="memberId" />
         <result column="BOARD_TITLE" property="boardTitle" />
         <result column="BOARD_CONTENT" property="boardContent"/>
         <result column="CREATE_DATE" property="createDate" />
   </resultMap>
   
   <resultMap type="band" id="bandResultSet" >
         <result column="SB_NO" property="sbNo"/>
         <result column="MEMBER_ID" property="memberId" />
         <result column="SB_TITLE" property="sbTitle" />
         <result column="SB_INTRODUCE" property="sbIntroduce" />
         <result column="CREATE_DATE" property="createDate" />
   </resultMap>
  
   
   
   
   
   <!-- 회원들의 count 조회(페이징) -->
   <select id="selectMemberCount" resultType="_int">
      SELECT
         COUNT(*)
      FROM
         MEMBER   
   </select>
   
   
   
   <!-- 회원들 모두 조회 -->
   <select id="adminMemberList" resultMap="memberResultSet">
         SELECT
         MEMBER_ID       
         ,MEMBER_NAME   
         ,NICKNAME      
         ,TO_CHAR(MEMBER_ENROLL_DATE, 'YYYY-MM-DD') AS MEMBER_ENROLL_DATE   
         ,MEMBER_STATUS         
      FROM   
         MEMBER
        ORDER 
            BY 
                MEMBER_ENROLL_DATE DESC
   
   </select>
   
   <!-- 검색한 키워드가 포함된  -->
   <select id="selectMemberSearchCount" resultType="_int" parameterType="hashmap">
      SELECT
         COUNT(*)
      FROM
         MEMBER
      WHERE   
      <if test="condition == 'memberId'">
         MEMBER_ID 
      </if>
      <if test="condition == 'nickName'">
         NICKNAME
      </if>
         LIKE '%' || #{keyword} || '%'      
   </select>
   
   <!-- 검색결과 ArrayList -->
   <select id="selectMemberSearchList" parameterType="hashmap" resultMap="memberResultSet">
         SELECT
            MEMBER_ID       
            ,MEMBER_NAME   
            ,NICKNAME      
            ,TO_CHAR(MEMBER_ENROLL_DATE, 'YYYY-MM-DD') AS MEMBER_ENROLL_DATE   
            ,MEMBER_STATUS         
         FROM   
            MEMBER
         WHERE
         <if test="condition == 'memberId'">
            MEMBER_ID
         </if>
         <if test="condition == 'nickName'">
               NICKNAME
         </if>
               LIKE '%' || #{keyword} || '%'      
           ORDER 
               BY 
                   MEMBER_ENROLL_DATE DESC
   
   </select>
   
   
   <!-- 회원 상태 조회 -->
   <select id="memberStatus" parameterType="string" resultType="member">
      SELECT
         MEMBER_STATUS memberStatus
      FROM   
         MEMBER
      WHERE
         MEMBER_ID = #{memberId}   
   
   </select>
   
   
   <!-- 회원 정지 해제  -->
   <update id="memberStopFree" parameterType="string">
      UPDATE
               MEMBER
            SET
               MEMBER_STATUS = 'Y'
            WHERE
               MEMBER_ID = #{memberId}
   </update>
   
   <!-- 회원 정지 -->
   <update id="memberStop" parameterType="string">
      UPDATE
               MEMBER
            SET
               MEMBER_STATUS = 'N'
            WHERE
               MEMBER_ID = #{memberId}
   </update>
   
   
   <!-- 회원이 작성한 BOARD글(mainBoard) -->
   <select id="memberDetailBoard" parameterType="string" resultMap="boardResultSet">
         SELECT
                BOARD_NO
                ,B.MEMBER_ID
                ,BOARD_TITLE
                ,BOARD_CONTENT
               ,B.CREATE_DATE          
            FROM
                MEMBER M
            JOIN
                MAINBOARD B ON M.MEMBER_ID = B.MEMBER_ID
            
            WHERE
                M.MEMBER_ID = #{memberId}
              AND 
                B.MEMBER_ID IS NOT NULL
              AND 
              	BOARD_STATUS = 'Y'  
              ORDER
              	BY
              	B.CREATE_DATE DESC
        	
         
   </select>
   <!-- 회원이 작성한 BAND글  -->
    <select id="memberDetailBand" parameterType="string" resultMap="bandResultSet">
          SELECT
             SB_NO
             ,S.MEMBER_ID
             ,SB_TITLE
             ,SB_INTRODUCE
             ,S.CREATE_DATE
         FROM 
             MEMBER M
         JOIN
             SBAND S ON (S.MEMBER_ID = M.MEMBER_ID)
         WHERE
             M.MEMBER_ID = #{memberId}
             AND S.MEMBER_ID IS NOT NULL
             AND SB_STATUS = 'Y'
        ORDER
            BY
              CREATE_DATE DESC
             
                
    </select>
    
    <!-- 회원정보조회 -->
   <select id="memberInfo" parameterType="string" resultType="member">
   		SELECT
   			MEMBER_ID		memberId
   			,MEMBER_PWD		memberPwd
   			,MEMBER_NAME	memberName
   			,MEMBER_EMAIL	memberEmail
   			,NICKNAME		nickName
   			,MEMBER_ENROLL_DATE	memberEnrollDate
   			,MEMBER_STATUS	memberStatus
   		FROM
   			MEMBER
   		WHERE
   			MEMBER_ID = #{memberId}	
   			
   </select>
   
   <!-- 회원 board 삭제 -->
   <update id="deleteBoardDetail" parameterType="_int">
   		UPDATE
   			MAINBOARD
   		SET
   			BOARD_STATUS = 'N'
   		WHERE
   			BOARD_NO = #{boardNo}		
   
   </update>
   
   <!-- 회원 band삭제 -->
   <update id="deleteBandDetail" parameterType="_int">
	   	UPDATE
	   			SBAND
	   		SET
	   			SB_STATUS = 'N'
	   		WHERE
	   			SB_NO = #{boardNo}	
   
   </update>
   
   <!-- 회원이 쓴 글 board 제목으로 검색 -->
   <select id="memBoardSearch" parameterType="hashmap" resultMap="boardResultSet">
   
   		 SELECT
                BOARD_NO
                ,B.MEMBER_ID
                ,BOARD_TITLE
                ,BOARD_CONTENT
               ,B.CREATE_DATE          
            FROM
                MEMBER M
            JOIN
                MAINBOARD B ON M.MEMBER_ID = B.MEMBER_ID
            
            WHERE
                M.MEMBER_ID = #{memberId}
            AND 
                BOARD_TITLE LIKE '%' || #{keyword} || '%'
            AND
            	BOARD_STATUS = 'Y'    
            ORDER
                BY
                CREATE_DATE DESC
   
   </select>
   
   <!-- 회원이 쓴 글 board 내용으로 검색 -->
  <select id="memSearchContent" parameterType="hashmap" resultMap="boardResultSet">
  		SELECT
                BOARD_NO
                ,B.MEMBER_ID
                ,BOARD_TITLE
                ,BOARD_CONTENT
               ,B.CREATE_DATE          
            FROM
                MEMBER M
            JOIN
                MAINBOARD B ON M.MEMBER_ID = B.MEMBER_ID
            
            WHERE
                M.MEMBER_ID = #{memberId}
            AND 
                BOARD_CONTENT LIKE '%' || #{keyword} || '%'
            AND
            	BOARD_STATUS = 'Y'    
            ORDER
                BY
                CREATE_DATE DESC
  	
  
  </select>
  
  
  <!-- 회원이 밴드 글 BAND 제목으로 검색 -->
  <select id="memBandSearchTitle" parameterType="hashmap" resultMap="bandResultSet">
  			SELECT
                SB_NO
                ,S.MEMBER_ID
                ,SB_TITLE
                ,SB_INTRODUCE
               ,S.CREATE_DATE          
            FROM
                MEMBER M
            JOIN
                SBAND S ON M.MEMBER_ID = S.MEMBER_ID
            
            WHERE
                M.MEMBER_ID = #{memberId}
            AND 
                SB_TITLE LIKE '%' || #{keyword} || '%'
            AND
            	SB_STATUS = 'Y'    
            ORDER
                BY
                S.CREATE_DATE DESC
    </select>
   
   <!-- 회원 band글 내용으로 검색 -->
   <select id="memBandSearchContent" parameterType="hashMap" resultMap="bandResultSet">
   		SELECT
                SB_NO
                ,S.MEMBER_ID
                ,SB_TITLE
                ,SB_INTRODUCE
               ,S.CREATE_DATE          
            FROM
                MEMBER M
            JOIN
                SBAND S ON M.MEMBER_ID = S.MEMBER_ID
            
            WHERE
                M.MEMBER_ID = #{memberId}
            AND 
                SB_INTRODUCE LIKE '%' || #{keyword} || '%'
            AND
            	SB_STATUS = 'Y'    
            ORDER
                BY
                S.CREATE_DATE DESC
   </select>
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
	<!-- 유진 -->
	<!-- 전체 문의글 수 가져오기 -->
	<select id="selectQnaListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM QNA
		<if test="qnaStatus == 'Y'.toString()">
		 WHERE QNA_STATUS = 'Y'
		</if>
		<if test="qnaStatus == 'N'.toString()">
		 WHERE QNA_STATUS = 'N'
		</if>
	</select>
	
	<!-- 문의글 리스트 가져오기 -->
	<select id="selectQnaList" parameterType="string" resultMap="qnaResultSet">
		SELECT QNA_NO, QNA_TITLE, QNA_CONTENT, TO_CHAR(QNA_DATE, 'YYYY-MM-DD') "QNA_DATE", QNA_STATUS
		  FROM QNA
		<if test="qnaStatus == 'Y'.toString()">
		 WHERE QNA_STATUS = 'Y'
		</if>
		<if test="qnaStatus == 'N'.toString()">
		 WHERE QNA_STATUS = 'N'
		</if>
		 ORDER
		    BY QNA_NO DESC
	</select>
	
	<!-- 문의글 답변 INSERT -->
	<insert id="insertQnaReply" parameterType="qnaReply">
		INSERT 
		  INTO QNA_REPLY
		  	   (
		  	   QNA_REPLY_NO
	  		  ,QNA_NO
	  		  ,QNA_REPLY_CONTENT 
	  		  ,QNA_REPLY_CREATE_DATE
	  		   ) 
		VALUES 
			   (
				SEQ_QNA_REPLY_NO.NEXTVAL
			  ,#{qnaNo}
			  ,#{qnaReplyContent}
			  ,SYSDATE 
			   )
	</insert>
	
	<!-- 문의글 답변 목록 출력 -->
	<select id="selectQnaReply" parameterType="_int" resultMap="qrResultSet">
		SELECT QNA_REPLY_NO,
		       QNA_REPLY_CONTENT,
		       TO_CHAR(QNA_REPLY_CREATE_DATE, 'YYYY-MM-DD HH:MI:SS') "QNA_REPLY_CREATE_DATE"
		  FROM
		       QNA_REPLY 
		 WHERE
		       QNA_NO = #{ qnaNo }
	</select>
	
	<!-- 문의글 답변여부 상태변화 -->
	<update id="qnaStatusUpdate" parameterType="_int">
		UPDATE
		       QNA
		   SET
		       QNA_STATUS = 'N'
		 WHERE
		       QNA_NO = #{ qnaNo }
	</update>
	
	<!-- 문의글 답변 삭제 -->
	<delete id="qnaReplyDelete" parameterType="_int">
		DELETE
		  FROM QNA_REPLY
		 WHERE QNA_NO = ${ qnaNo }
	</delete>

	<!-- 아이템 등록 -->
	<insert id="insertItem" parameterType="item">
		INSERT 
		  INTO BOARD_ITEM
		  	   (
		  	   ITEM_NO
	  		  ,ITEM_CATEGORY
	  		  ,ITEM_NAME 
	  		  ,ITEM_CONTENT
	  		  ,ITEM_PRICE
	  		  ,ITEM_STATUS
	  		  ,ITEM_PHOTO
	  		   ) 
		VALUES 
			   (
				SEQ_BOARD_ITEM.NEXTVAL
			  ,#{itemCategory}
			  ,#{itemName}
			  ,#{itemContent}
			  ,#{itemPrice}
			  ,DEFAULT
			  ,#{itemPhoto}
			   )
	</insert>
	
	<!-- 아이템 전체 수 -->
	<select id="selectItemListCount" parameterType="item" resultType="_int">
		SELECT COUNT(*)
		  FROM BOARD_ITEM
		<choose>
			<when test="itemCategory != '전체보기'">
			 WHERE ITEM_CATEGORY = #{ itemCategory }
				 <if test="itemStatus != 'all'">
				   AND ITEM_STATUS = #{ itemStatus }
				 </if>
			</when>
			<otherwise>
				<if test="itemStatus != 'all'">
				WHERE ITEM_STATUS = #{ itemStatus }
				 </if>
			</otherwise>
		</choose>
	</select>	
	
	<!-- 아이템 리스트 -->
	<select id="selectItemList" parameterType="item" resultMap="itemResultSet">
		SELECT ITEM_NO
		      ,ITEM_CATEGORY
		      ,ITEM_NAME
		      ,ITEM_CONTENT
		      ,ITEM_PRICE
		      ,ITEM_STATUS
		      ,ITEM_PHOTO
		  FROM BOARD_ITEM
		<choose>
			<when test="itemCategory != '전체보기'">
				WHERE ITEM_CATEGORY = #{ itemCategory }	
				<if test="itemStatus != 'all'">
				   AND ITEM_STATUS = #{ itemStatus }
				 </if>
			</when>
			<otherwise>
				<if test="itemStatus != 'all'">
				  WHERE ITEM_STATUS = #{ itemStatus }
				 </if>
			</otherwise>
		</choose>
	</select>



</mapper>