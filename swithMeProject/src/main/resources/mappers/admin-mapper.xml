<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">

	<resultMap id="qnaResultSet" type="qna">
		<result column="QNA_NO"			property="qnaNo" />
		<result column="MEMBER_ID"		property="memberId" />
		<result column="QNA_TITLE"		property="qnaTitle" />
		<result column="QNA_CONTENT"	property="qnaContent" />
		<result column="QNA_DATE"		property="qnaDate" />
		<result column="QNA_STATUS"		property="qnaStatus" />
	</resultMap>

	<resultMap id="qrResultSet" type="qnaReply">
		<result column="QNA_REPLY_NO"			property="qnaReplyNo" />
		<result column="QNA_NO"					property="qnaNo" />
		<result column="QNA_REPLY_CONTENT"		property="qnaReplyContent" />
		<result column="QNA_REPLY_CREATE_DATE"	property="qnaReplyCreateDate" />
	</resultMap>
	
   <!-- 희재 -->
   
   
   
   
   
   
   
   
 
    <!-- 지현 -->
   
   <resultMap type="member" id="memberResultSet">
      <result column="MEMBER_ID" property="memberId" />
      <result column="MEMBER_PWD" property="memberPwd" />
      <result column="MEMBER_NAME" property="memberName" />
      <result column="MEMBER_EMAIL" property="memberEmail" />
      <result column="NICKNAME" property="nickName" />
      <result column="MEMBER_ENROLL_DATE" property="memberEnrollDate" />
      <result column="MEMBER_STATUS" property="memberStatus" />
   </resultMap>
   
   
   
   
   
      <resultMap type="memberDetailInfo" id="memberDetailInfoReesultSet">
         <result column="BOARD_NO" property="boardNo" />
         <result column="MEMBER_ID" property="memberId" />
         <result column="BOARD_TITLE" property="boardTitle" />
         <result column="BOARD_CONTENT" property="boardContent"/>
         <result column="CREATE_DATE" property="createDate" />
   
         <result column="SB_NO" property="sbNo"/>
         <result column="MEMBER_ID" property="memberId" />
         <result column="SB_TITLE" property="sbTitle" />
         <result column="SB_INTRODICE" property="sbIntroduce" />
         <result column="CREATE_DATE" property="createDate" />
   </resultMap>
  
   
   
   
   <resultMap type="board" id="boardResultSet">
         <result column="BOARD_NO" property="boardNo" />
         <result column="MEMBER_ID" property="memberId" />
         <result column="BOARD_TITLE" property="boardTitle" />
         <result column="BOARD_CONTENT" property="boardContent"/>
         <result column="CREATE_DATE" property="createDate" />
   </resultMap>
   
   <resultMap type="band" id="bandResultSet" >
         <result column="SB_NO" property="sbNo"/>
         <result column="MEMBER_ID" property="memberId" />
         <result column="SB_TITLE" property="sbTitle" />
         <result column="SB_INTRODICE" property="sbIntroduce" />
         <result column="CREATE_DATE" property="createDate" />
   </resultMap>
  
   
   
   
   
   <!-- 회원들의 count 조회(페이징) -->
   <select id="selectMemberCount" resultType="_int">
      SELECT
         COUNT(*)
      FROM
         MEMBER   
   </select>
   
   
   
   <!-- 회원들 모두 조회 -->
   <select id="adminMemberList" resultMap="memberResultSet">
         SELECT
         MEMBER_ID       
         ,MEMBER_NAME   
         ,NICKNAME      
         ,TO_CHAR(MEMBER_ENROLL_DATE, 'YYYY-MM-DD') AS MEMBER_ENROLL_DATE   
         ,MEMBER_STATUS         
      FROM   
         MEMBER
        ORDER 
            BY 
                MEMBER_ENROLL_DATE DESC
   
   </select>
   
   <!-- 검색한 키워드가 포함된  -->
   <select id="selectMemberSearchCount" resultType="_int" parameterType="hashmap">
      SELECT
         COUNT(*)
      FROM
         MEMBER
      WHERE   
      <if test="condition == 'memberId'">
         MEMBER_ID 
      </if>
      <if test="condition == 'nickName'">
         NICKNAME
      </if>
         LIKE '%' || #{keyword} || '%'      
   </select>
   
   <!-- 검색결과 ArrayList -->
   <select id="selectMemberSearchList" parameterType="hashmap" resultMap="memberResultSet">
         SELECT
            MEMBER_ID       
            ,MEMBER_NAME   
            ,NICKNAME      
            ,TO_CHAR(MEMBER_ENROLL_DATE, 'YYYY-MM-DD') AS MEMBER_ENROLL_DATE   
            ,MEMBER_STATUS         
         FROM   
            MEMBER
         WHERE
         <if test="condition == 'memberId'">
            MEMBER_ID
         </if>
         <if test="condition == 'nickName'">
               NICKNAME
         </if>
               LIKE '%' || #{keyword} || '%'      
           ORDER 
               BY 
                   MEMBER_ENROLL_DATE DESC
   
   </select>
   
   
   <!-- 회원 상태 조회 -->
   <select id="memberStatus" parameterType="string" resultType="member">
      SELECT
         MEMBER_STATUS memberStatus
      FROM   
         MEMBER
      WHERE
         MEMBER_ID = #{memberId}   
   
   </select>
   
   
   
   
   
   <!-- 회원 정지 해제  -->
   <update id="memberStopFree" parameterType="string">
      UPDATE
               MEMBER
            SET
               MEMBER_STATUS = 'Y'
            WHERE
               MEMBER_ID = #{memberId}
   </update>
   
   <!-- 회원 정지 -->
   <update id="memberStop" parameterType="string">
      UPDATE
               MEMBER
            SET
               MEMBER_STATUS = 'N'
            WHERE
               MEMBER_ID = #{memberId}
   </update>
   
   
   <!-- 회원 상세정보 조회(mainBoard) -->
   <select id="memberDetailBoard" parameterType="string" resultMap="boardResultSet">
         SELECT
                BOARD_NO
                ,B.MEMBER_ID
                ,BOARD_TITLE
                ,BOARD_CONTENT
               ,B.CREATE_DATE          
            FROM
                MEMBER M
            JOIN
                MAINBOARD B ON M.MEMBER_ID = B.MEMBER_ID
            
            WHERE
                M.MEMBER_ID = #{memberId}
              AND 
                B.MEMBER_ID IS NOT NULL
         
   </select>
   
    <select id="memberDetailBand" parameterType="string" resultMap="bandResultSet">
          SELECT
             SB_NO
             ,S.MEMBER_ID
             ,SB_TITLE
             ,SB_INTRODUCE
             ,S.CREATE_DATE
         FROM 
             MEMBER M
         JOIN
             SBAND S ON (S.MEMBER_ID = M.MEMBER_ID)
         WHERE
             M.MEMBER_ID = #{memberId}
             AND S.MEMBER_ID IS NOT NULL
                
    </select>
   
  
    
   
   
   
   
   
   
   
	<!-- 유진 -->
	<!-- 전체 문의글 수 가져오기 -->
	<select id="selectQnaListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM QNA
		<if test="qnaStatus == 'Y'.toString()">
		 WHERE QNA_STATUS = 'Y'
		</if>
		<if test="qnaStatus == 'N'.toString()">
		 WHERE QNA_STATUS = 'N'
		</if>
	</select>
	
	<!-- 문의글 리스트 가져오기 -->
	<select id="selectQnaList" parameterType="string" resultMap="qnaResultSet">
		SELECT QNA_NO, QNA_TITLE, QNA_CONTENT, TO_CHAR(QNA_DATE, 'YYYY-MM-DD') "QNA_DATE", QNA_STATUS
		  FROM QNA
		<if test="qnaStatus == 'Y'.toString()">
		 WHERE QNA_STATUS = 'Y'
		</if>
		<if test="qnaStatus == 'N'.toString()">
		 WHERE QNA_STATUS = 'N'
		</if>
		 ORDER
		    BY QNA_NO DESC
	</select>
	
	<!-- 문의글 답변 INSERT -->
	<insert id="insertQnaReply" parameterType="qnaReply">
		INSERT 
		  INTO QNA_REPLY
		  	   (
		  	   QNA_REPLY_NO
	  		  ,QNA_NO
	  		  ,QNA_REPLY_CONTENT 
	  		  ,QNA_REPLY_CREATE_DATE
	  		   ) 
		VALUES 
			   (
				SEQ_QNA_REPLY_NO.NEXTVAL
			  ,#{qnaNo}
			  ,#{qnaReplyContent}
			  ,SYSDATE 
			   )
	</insert>
	
	<!-- 문의글 답변 목록 출력 -->
	<select id="selectQnaReply" parameterType="_int" resultMap="qrResultSet">
		SELECT QNA_REPLY_NO,
		       QNA_REPLY_CONTENT,
		       TO_CHAR(QNA_REPLY_CREATE_DATE, 'YYYY-MM-DD HH:MI:SS') "QNA_REPLY_CREATE_DATE"
		  FROM
		       QNA_REPLY 
		 WHERE
		       QNA_NO = #{ qnaNo }
	</select>
	
	<!-- 문의글 답변여부 상태변화 -->
	<update id="qnaStatusUpdate" parameterType="_int">
		UPDATE
		       QNA
		   SET
		       QNA_STATUS = 'N'
		 WHERE
		       QNA_NO = #{ qnaNo }
	</update>
	
	<!-- 문의글 답변 삭제 -->
	<delete id="qnaReplyDelete" parameterType="_int">
		DELETE
		  FROM QNA_REPLY
		 WHERE QNA_NO = ${ qnaNo }
	</delete>


</mapper>